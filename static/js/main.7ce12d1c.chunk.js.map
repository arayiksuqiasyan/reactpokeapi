{"version":3,"sources":["utils/reusable.js","components/ListItem/ListItem.js","utils/Fetch.js","components/List/List.js","components/Detiles/Detiles.js","App.js","reportWebVitals.js","index.js"],"names":["titleCase","str","toUpperCase","slice","toLowerCase","ListItem","pokemon","page","useHistory","className","onClick","push","name","get","url","request","method","body","fetch","JSON","stringify","then","res","json","List","props","useState","offset","setOffset","pokemons","setPokemons","console","log","loading","setLoading","search","setSearch","types","setTypes","mood","setMood","useEffect","localStorage","getItem","data","mapped","map","p","results","t","loadPokemons","e","a","target","scrollHeight","scrollTop","clientHeight","newOffset","serchPokemon","setItem","onChange","value","type","_","onScroll","i","indexOf","Detiles","history","info","setInfo","match","params","replace","src","sprites","front_default","height","weight","abilities","ability","App","exact","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ce12d1c.chunk.js","sourcesContent":["export function titleCase(str) {\r\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { titleCase } from \"../../utils/reusable\";\r\n\r\nfunction ListItem({ pokemon }) {\r\n  let page = useHistory();\r\n  const navigate = () => {\r\n    page.push(`/detiles/${pokemon.name}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-item\" onClick={navigate}>\r\n      <span>{titleCase(pokemon.name)}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","const ROOT = \"https://pokeapi.co/api/v2\";\r\nexport function get(url) {\r\n  return request(url, \"GET\");\r\n}\r\nexport function post(url, body) {\r\n  return request(url, \"POST\", body);\r\n}\r\nexport function put(url, body) {\r\n  return request(url, \"PUT\", body);\r\n}\r\nexport function remove(url, body) {\r\n  return request(url, \"DELETE\", body);\r\n}\r\nfunction request(url, method, body) {\r\n  return fetch(`${ROOT}/${url}`, {\r\n    method,\r\n    body: JSON.stringify(body),\r\n  }).then((res) => res.json());\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport ListItem from \"../ListItem/ListItem\";\r\nimport { get } from \"../../utils/Fetch\";\r\n\r\nfunction List(props) {\r\n  const [offset, setOffset] = useState(0);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  console.log(\"pokemons\", pokemons);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [types, setTypes] = useState([]);\r\n  const [mood, setMood] = useState(\"\");\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"mood\")) {\r\n      setMood(localStorage.getItem(\"mood\"));\r\n      get(localStorage.getItem(\"mood\")).then((data) => {\r\n        const mapped = data.pokemon.map((p) => p.pokemon);\r\n        setPokemons(mapped);\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      get(`pokemon?limit=10&offset=${offset}`).then((data) => {\r\n        setPokemons(data.results);\r\n      });\r\n    }\r\n\r\n    get(\"type\").then((t) => {\r\n      setTypes(t.results);\r\n      if (!localStorage.getItem(\"mood\")) {\r\n        setMood(t.results[0].url.slice(26));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const loadPokemons = async (e) => {\r\n    const { scrollHeight, scrollTop, clientHeight } = e.target;\r\n    if (scrollTop + clientHeight >= scrollHeight - 100 && !loading) {\r\n      const newOffset = offset + 10;\r\n      setLoading(true);\r\n      setOffset(newOffset);\r\n      get(`pokemon?limit=15&offset=${newOffset}`).then((data) => {\r\n        setPokemons([...pokemons, ...data.results]);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const serchPokemon = async () => {\r\n    setLoading(true);\r\n    setOffset(0);\r\n    get(mood).then((data) => {\r\n      const mapped = data.pokemon.map((p) => p.pokemon);\r\n      setPokemons(mapped);\r\n      localStorage.setItem(\"mood\", mood);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter\">\r\n        <input\r\n          className=\"inputbtn\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n        />\r\n        <select\r\n          className=\"select\"\r\n          onChange={(e) => {\r\n            setMood(e.target.value);\r\n          }}\r\n          value={mood}\r\n        >\r\n          {types.map((type, _) => {\r\n            return (\r\n              <option key={_} value={type.url.slice(26)}>\r\n                {type.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <button onClick={serchPokemon} className=\"search\">\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"list\" onScroll={loadPokemons}>\r\n        {pokemons.map((pokemon, i) => {\r\n          if (pokemon.name.indexOf(search) === 0) {\r\n            return <ListItem pokemon={pokemon} key={i} />;\r\n          }\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { titleCase } from \"../../utils/reusable\";\r\nimport { get } from \"../../utils/Fetch\";\r\n\r\nfunction Detiles(props) {\r\n  const history = useHistory();\r\n  console.log(history);\r\n\r\n  const [info, setInfo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    get(`pokemon/${props.match.params.name}`).then((pokemon) => {\r\n      setInfo(pokemon);\r\n      setLoading(false);\r\n    });\r\n  }, [props.match.params.name]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"detiles\">\r\n        <div className=\"lds-dual-ring\"></div>\r\n      </div>\r\n    );\r\n  } else if (info) {\r\n    return (\r\n      <div className=\"detiles\">\r\n        <div className=\"header\">\r\n          <span\r\n            className=\"back-btn\"\r\n            onClick={() => {\r\n              history.replace(\"/\");\r\n            }}\r\n          >\r\n            Back\r\n          </span>\r\n          <h3>{titleCase(props.match.params.name)}</h3>\r\n        </div>\r\n        <div className=\"body\">\r\n          <div className=\"avatar\">\r\n            <figure>\r\n              <img src={info.sprites.front_default} />\r\n            </figure>\r\n          </div>\r\n          <div className=\"info\">\r\n            <div className=\"card-row\">\r\n              <span className=\"card-title\">Name:  </span>\r\n              <span className=\"card-value\">{info.name} </span>\r\n            </div>\r\n            <div className=\"card-row\">\r\n              <span className=\"card-title\">Height:  </span>\r\n              <span className=\"card-value\">{info.height} cm </span>\r\n            </div>\r\n            <div className=\"card-row\">\r\n              <span className=\"card-title\">Weight:  </span>\r\n              <span className=\"card-value\">{info.weight} kg </span>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"card-title\">Types</h3>\r\n              <hr />\r\n              <br />\r\n              {info.types.map((type, _) => {\r\n                return (\r\n                  <span key={_} className=\"card-type\">\r\n                    {titleCase(type.type.name)}\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n            <div>\r\n              <h3 className=\"card-title\">Ability</h3>\r\n              <hr />\r\n              <br />\r\n              {info.abilities.map((ability, _) => {\r\n                return (\r\n                  <span key={_} className=\"card-type\">\r\n                    {titleCase(ability.ability.name)}\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>No Data</div>;\r\n  }\r\n}\r\n\r\nexport default Detiles;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport List from \"./components/List/List\";\nimport Detiles from \"./components/Detiles/Detiles\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <h1 className=\"title\">Pokemons</h1>\n      <Switch>\n        <Route exact path=\"/\" component={List} />\n        <Route path=\"/detiles/:name\" component={Detiles} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}